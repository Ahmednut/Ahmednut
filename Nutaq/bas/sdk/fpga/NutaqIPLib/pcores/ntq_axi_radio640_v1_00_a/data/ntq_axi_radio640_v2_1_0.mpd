###################################################################
##
## Name     : ntq_axi_radio640
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN ntq_axi_radio640

## Peripheral Options
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = ntq_axi_radio640
OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_CARRIER             = Other, DT = STRING, VALUES = ( Perseus601X = Perseus601X, Perseus611X = Perseus611X, Other = Other )
PARAMETER C_FMC_CONNECTOR       = 1, DT = INTEGER, RANGE = (1:4)
PARAMETER C_BOARD_POSITION      = 1, DT = INTEGER, RANGE = (1:2)
PARAMETER C_CLOCK_MASTER        = 1, DT = INTEGER, RANGE = (0:1), VALUES = (0=FALSE, 1=TRUE)
PARAMETER C_DESIGN_CLK_RATE     = 1, DT = INTEGER, RANGE = (1,4)

PARAMETER PCORE_DEVICE_TYPE     = 0, DT = INTEGER
PARAMETER PCORE_DAC_DP_DISABLE  = 0, DT = INTEGER
PARAMETER PCORE_ADC_DP_DISABLE  = 0, DT = INTEGER
PARAMETER COMPLEX_MULT          = 1, DT = INTEGER, RANGE = (0:1), VALUES = (0=FALSE, 1=TRUE)

PARAMETER C_S_AXI_MIN_SIZE      = 0x0000ffff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, MIN_SIZE = 0x100
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

# RX interface
IO_INTERFACE IO_IF = EXTERNAL_PINS, IO_TYPE = GPIO
IO_INTERFACE IO_IF = USER_ADC_DAC_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = USER_CTRL_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = USER_SPI_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = SYNC_IF, IO_TYPE = GPIO

# AD9361 Data Communication
PORT idp_Ad9361RxClkPin_p       = "", DIR = I, SIGIS = CLK, IO_IF = EXTERNAL_PINS
PORT idn_Ad9361RxClkPin_p       = "", DIR = I, SIGIS = CLK, IO_IF = EXTERNAL_PINS
PORT idp_Ad9361RxFramePin_p     = "", DIR = I             , IO_IF = EXTERNAL_PINS
PORT idn_Ad9361RxFramePin_p     = "", DIR = I             , IO_IF = EXTERNAL_PINS
PORT iv6dp_Ad9361RxDataPin_p    = "", DIR = I, VEC = [5:0], IO_IF = EXTERNAL_PINS
PORT iv6dn_Ad9361RxDataPin_p    = "", DIR = I, VEC = [5:0], IO_IF = EXTERNAL_PINS
PORT odp_Ad9361TxClkPin_p       = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT odn_Ad9361TxClkPin_p       = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT odp_Ad9361TxFramePin_p     = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT odn_Ad9361TxFramePin_p     = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT ov6dp_Ad9361TxDataPin_p    = "", DIR = O, VEC = [5:0], IO_IF = EXTERNAL_PINS
PORT ov6dn_Ad9361TxDataPin_p    = "", DIR = O, VEC = [5:0], IO_IF = EXTERNAL_PINS

#Control Pins
PORT idp_Ad9361RefClkPin_p      = "", DIR = I, SIGIS = CLK, IO_IF = EXTERNAL_PINS
PORT idn_Ad9361RefClkPin_p      = "", DIR = I, SIGIS = CLK, IO_IF = EXTERNAL_PINS
PORT i_Ad9361ClkOutPin_p        = "", DIR = I, SIGIS = CLK, IO_IF = EXTERNAL_PINS
PORT i_SyncPin_p                = "", DIR = I             , IO_IF = EXTERNAL_PINS
PORT i_TriggerPin_p             = "", DIR = I             , IO_IF = EXTERNAL_PINS
PORT o_Ad9361SyncPin_p          = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_Ad9361TxnrxPin_p         = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_Ad9361EnablePin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_Ad9361EnAgcPin_p         = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_Ad9361ResetnPin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_OscEnPin_p               = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_ClkResetPin_p            = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT ov4_Ad9361CtrlInPin_p      = "", DIR = O, VEC = [3:0], IO_IF = EXTERNAL_PINS
PORT iv8_Ad9361CtrlOutPin_p     = "", DIR = I, VEC = [7:0], IO_IF = EXTERNAL_PINS
PORT o_RfSwitch1Pin_p           = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_RfSwitch2Pin_p           = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT ov2_ClkSwitch1Pin_p        = "", DIR = O, VEC = [1:0], IO_IF = EXTERNAL_PINS
PORT o_ClkSwitch2Pin_p          = "", DIR = O             , IO_IF = EXTERNAL_PINS

#SPI Pins
PORT o_TrxSpiCsnPin_p           = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_ClkSpiCsnPin_p           = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_TrxClkSpiClkPin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_TrxClkSpiMosiPin_p       = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT i_TrxClkSpiMisoPin_p       = "", DIR = I             , IO_IF = EXTERNAL_PINS

PORT o_OscDacSpiCsnPin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_OscDacSpiClkPin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_OscDacSpiMosiPin_p       = "", DIR = O             , IO_IF = EXTERNAL_PINS

PORT o_RfAttSpiLePin_p          = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_RfAttSpiClkPin_p         = "", DIR = O             , IO_IF = EXTERNAL_PINS
PORT o_RfAttSpiMosiPin_p        = "", DIR = O             , IO_IF = EXTERNAL_PINS

#Data User Logic
PORT o_DesignClk_p              = "", DIR = O, SIGIS = CLK , IO_IF = USER_ADC_DAC_IF

PORT o_AdcEnableCh1_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT ov16_AdcDataICh1_p         = "", DIR = O, VEC = [15:0], IO_IF = USER_ADC_DAC_IF                                            
PORT ov16_AdcDataQCh1_p         = "", DIR = O, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT o_AdcValidCh1_p            = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
                                                       
PORT o_AdcEnableCh2_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT ov16_AdcDataICh2_p         = "", DIR = O, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT ov16_AdcDataQCh2_p         = "", DIR = O, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT o_AdcValidCh2_p            = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
                                                       
PORT o_DacEnableCh1_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT o_DacReadEnCh1_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT iv16_DacDataICh1_p         = "", DIR = I, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT iv16_DacDataQCh1_p         = "", DIR = I, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT i_DacValidCh1_p            = "", DIR = I              , IO_IF = USER_ADC_DAC_IF
                                                       
PORT o_DacEnableCh2_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT o_DacReadEnCh2_p           = "", DIR = O              , IO_IF = USER_ADC_DAC_IF
PORT iv16_DacDataICh2_p         = "", DIR = I, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT iv16_DacDataQCh2_p         = "", DIR = I, VEC = [15:0], IO_IF = USER_ADC_DAC_IF
PORT i_DacValidCh2_p            = "", DIR = I              , IO_IF = USER_ADC_DAC_IF

#Control User Logic
PORT i_Ad9361Txnrx_p            = "", DIR = I              , IO_IF = USER_CTRL_IF
PORT i_Ad9361Enable_p           = "", DIR = I              , IO_IF = USER_CTRL_IF
PORT i_Ad9361EnAgc_p            = "", DIR = I              , IO_IF = USER_CTRL_IF
PORT iv4_Ad9361CtrlIn_p         = "", DIR = I, VEC = [3:0] , IO_IF = USER_CTRL_IF
PORT ov8_Ad9361CtrlOut_p        = "", DIR = O, VEC = [7:0] , IO_IF = USER_CTRL_IF
PORT i_Trx1InRxDir_p            = "", DIR = I              , IO_IF = USER_CTRL_IF
PORT i_Trx2InRxDir_p            = "", DIR = I              , IO_IF = USER_CTRL_IF
PORT o_Trigger_p                = "", DIR = O              , IO_IF = USER_CTRL_IF

#SPI User Logic                                           
PORT iv10_TrxSpiAddr_p          = "", DIR = I, VEC = [9:0] , IO_IF = USER_SPI_IF
PORT iv8_TrxSpiData_p           = "", DIR = I, VEC = [7:0] , IO_IF = USER_SPI_IF
PORT ov8_TrxSpiData_p           = "", DIR = O, VEC = [7:0] , IO_IF = USER_SPI_IF
PORT i_TrxSpiWrnrd_p            = "", DIR = I              , IO_IF = USER_SPI_IF
PORT i_TrxSpiStart_p            = "", DIR = I              , IO_IF = USER_SPI_IF
PORT o_TrxSpiBusy_p             = "", DIR = O              , IO_IF = USER_SPI_IF
                                                                     
PORT iv16_OscDacSpiData_p       = "", DIR = I, VEC = [15:0], IO_IF = USER_SPI_IF
PORT i_OscDacSpiStart_p         = "", DIR = I              , IO_IF = USER_SPI_IF
PORT o_OscDacSpiBusy_p          = "", DIR = O              , IO_IF = USER_SPI_IF
                                                                     
PORT iv7_RfAttSpiData_p         = "", DIR = I, VEC = [6:0] , IO_IF = USER_SPI_IF
PORT i_RfAtt1SpiStart_p         = "", DIR = I              , IO_IF = USER_SPI_IF
PORT i_RfAtt2SpiStart_p         = "", DIR = I              , IO_IF = USER_SPI_IF
PORT o_RfAttSpiBusy_p           = "", DIR = O              , IO_IF = USER_SPI_IF

#Clocks and Master/Slave synchronization                   
PORT i_DelayClk_p               = "", DIR = I, SIGIS = CLK , IO_IF = SYNC_IF
PORT i_DelayRst_p               = "", DIR = I, SIGIS = RST , IO_IF = SYNC_IF
PORT o_RefClk_p                 = "", DIR = O, SIGIS = CLK , IO_IF = SYNC_IF
PORT o_Sync_p                   = "", DIR = O              , IO_IF = SYNC_IF
PORT o_SerialClk_p              = "", DIR = O, SIGIS = CLK , IO_IF = SYNC_IF
PORT i_SerialClkFromMaster_p    = "", DIR = I, SIGIS = CLK , IO_IF = SYNC_IF
PORT i_DesignClkFromMaster_p    = "", DIR = I, SIGIS = CLK , IO_IF = SYNC_IF
PORT i_RefClkFromMaster_p       = "", DIR = I, SIGIS = CLK , IO_IF = SYNC_IF
PORT i_SyncFromMaster_p         = "", DIR = I              , IO_IF = SYNC_IF
                                                       

## AXI Interface
PORT s_axi_aclk = ACLK, DIR = I, SIGIS = CLK, BUS = S_AXI
PORT s_axi_aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT s_axi_awvalid = AWVALID, DIR = I, BUS = S_AXI
PORT s_axi_awaddr = AWADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_awready = AWREADY, DIR = O, BUS = S_AXI
PORT s_axi_wvalid = WVALID, DIR = I, BUS = S_AXI
PORT s_axi_wdata = WDATA, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wstrb = WSTRB, DIR = I, VEC = [3:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wready = WREADY, DIR = O, BUS = S_AXI
PORT s_axi_bvalid = BVALID, DIR = O, BUS = S_AXI
PORT s_axi_bresp = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_bready = BREADY, DIR = I, BUS = S_AXI
PORT s_axi_arvalid = ARVALID, DIR = I, BUS = S_AXI
PORT s_axi_araddr = ARADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_arready = ARREADY, DIR = O, BUS = S_AXI
PORT s_axi_rvalid = RVALID, DIR = O, BUS = S_AXI
PORT s_axi_rdata = RDATA, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_rresp = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_rready = RREADY, DIR = I, BUS = S_AXI

END
