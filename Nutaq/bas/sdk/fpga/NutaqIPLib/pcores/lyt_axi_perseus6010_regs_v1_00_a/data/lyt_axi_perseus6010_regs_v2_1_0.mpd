#------------------------------------------------------------------------------
# Filename:        axi_perseus6010_regs_v2_1_0.mpd
# Description:     Microprocessor Peripheral Description
# Generated by:    David.Quinn
# Date:            2014-10-23 12:20:09
# Copyright (c) 2001-2012 LYRtech RD Inc.  All rights reserved.
#
# LYRtech RD Inc.
#------------------------------------------------------------------------------


BEGIN lyt_axi_perseus6010_regs

#------------------------------------------------------------------------------
# Peripheral Options
#-----------------------------------------------------------------------------
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:USER
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
OPTION DESC = AXI Perseus6010 Registers
OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)

#------------------------------------------------------------------------------
# Bus Interfaces
#-----------------------------------------------------------------------------
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

#------------------------------------------------------------------------------
# Generics for VHDL or Parameters for Verilog
#-----------------------------------------------------------------------------
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_USE_WSTRB = 1, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

#------------------------------------------------------------------------------
# Ports
#------------------------------------------------------------------------------
PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
# User interfaces
IO_INTERFACE IO_IF = CUSTOM_REGS_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = AURORA_REGS_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = PPS_REGS_IF, IO_TYPE = GPIO
IO_INTERFACE IO_IF = RTDEX_SYNC_REGS_IF, IO_TYPE = GPIO

# User ports
PORT i_daughter_absent_p = "", DIR = IN, 
PORT i_fmc1_absent_p = "", DIR = IN, 
PORT o_pcie_msi_p = "", DIR = OUT, 
PORT ov2_uart_mode_p = "", DIR = OUT, VEC = [1:0]
PORT i_fmc1_stack_absent_p = "", DIR = IN, 
PORT i_fmc1_clkdir_p = "", DIR = IN, 
PORT i_ddr3_init_done_p = "", DIR = IN, 
PORT i_pcie_present_p = "", DIR = IN, 
PORT i_pcie_clock_lock_p = "", DIR = IN, 
PORT o_CtrlTclkdTxEn_p = "", DIR = OUT, 
PORT o_CtrlTclkdRxDis_p = "", DIR = OUT, 
PORT o_CtrlAmctclkc2Fmcclk3En_p = "", DIR = OUT, 
PORT o_CtrlAmctclka2Fmcclk2En_p = "", DIR = OUT, 
PORT o_CtrlFclkaHighz_p = "", DIR = OUT, 
PORT o_Ctrl100mhzOutEn_p = "", DIR = OUT, 
PORT o_CtrlGatedClkEn_p = "", DIR = OUT, 
PORT o_CtrlTclkcTxEn_p = "", DIR = OUT, 
PORT o_CtrlTclkcRxDis_p = "", DIR = OUT, 
PORT o_CtrlTclkbTxEn_p = "", DIR = OUT, 
PORT o_CtrlTclkbRxDis_p = "", DIR = OUT, 
PORT o_CtrlTclkaTxEn_p = "", DIR = OUT, 
PORT o_CtrlTclkaRxDis_p = "", DIR = OUT, 
PORT o_CtrlFmcclk12AmctclkdEn_p = "", DIR = OUT, 
PORT o_CtrlFmcclk02AmctclkbEn_p = "", DIR = OUT, 
PORT ov2_CtrlVadjSel_p = "", DIR = OUT, VEC = [1:0]
PORT o_CtrlVadjEn_p = "", DIR = OUT, 
PORT o_nFpgaProg_p = "", DIR = OUT, 
PORT ov8_nCtrlLedGrn_p = "", DIR = OUT, VEC = [7:0]
PORT o_CtrlLedBufOd_p = "", DIR = OUT, 
PORT ov8_nCtrlLedRed_p = "", DIR = OUT, VEC = [7:0]
PORT o_MmcI2cReleaseReq_p = "", DIR = OUT, 
PORT i_MmcI2cReleaseAck_p = "", DIR = IN, 
PORT iv32_CustomReg0_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg0_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg1_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg1_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg2_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg2_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg3_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg3_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg4_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg4_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg5_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg5_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg6_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg6_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg7_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg7_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg8_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg8_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg9_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg9_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg10_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg10_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg11_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg11_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg12_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg12_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg13_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg13_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg14_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg14_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg15_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg15_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg16_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg16_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg17_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg17_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg18_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg18_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg19_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg19_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg20_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg20_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg21_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg21_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg22_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg22_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg23_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg23_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg24_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg24_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg25_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg25_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg26_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg26_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg27_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg27_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg28_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg28_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg29_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg29_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg30_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg30_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_CustomReg31_p = "", DIR = IN, VEC = [31:0]
PORT ov32_CustomReg31_p = "", DIR = OUT, VEC = [31:0]
PORT ov16_Aurora0_Idx_p = "", DIR = OUT, VEC = [15:0]
PORT o_Aurora0_WrEn_p = "", DIR = OUT, 
PORT iv32_Aurora0_Data_p = "", DIR = IN, VEC = [31:0]
PORT ov32_Aurora0_Data_p = "", DIR = OUT, VEC = [31:0]
PORT ov16_Aurora1_Idx_p = "", DIR = OUT, VEC = [15:0]
PORT o_Aurora1_WrEn_p = "", DIR = OUT, 
PORT iv32_Aurora1_Data_p = "", DIR = IN, VEC = [31:0]
PORT ov32_Aurora1_Data_p = "", DIR = OUT, VEC = [31:0]
PORT ov16_Aurora2_Idx_p = "", DIR = OUT, VEC = [15:0]
PORT o_Aurora2_WrEn_p = "", DIR = OUT, 
PORT iv32_Aurora2_Data_p = "", DIR = IN, VEC = [31:0]
PORT ov32_Aurora2_Data_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_PPSSYNC_CoreIdVers_p = "", DIR = IN, VEC = [31:0]
PORT ov32_PPSSYNC_ClkTarget_p = "", DIR = OUT, VEC = [31:0]
PORT o_PPSSYNC_CoreReset_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_RstUponRead_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_RstAcc_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_CoreEnable_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_MovSumEn_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_MovSumRst_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT iv32_PPSSYNC_PpsCnt_p = "", DIR = IN, VEC = [31:0], IO_IF = PPS_REGS_IF
PORT iv32_PPSSYNC_DiffAcc_p = "", DIR = IN, VEC = [31:0], IO_IF = PPS_REGS_IF
PORT o_PPSSYNC_DiffAccRead_p = "", DIR = OUT, IO_IF = PPS_REGS_IF
PORT ov32_PPSSYNC_ProgDelay_p = "", DIR = OUT, VEC = [31:0]
PORT ov32_PPSSYNC_PpsFreq_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds0_coreid_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds0_ctrl_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds0_value_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds0_value_p = "", DIR = OUT, VEC = [31:0]
PORT ov32_lvds0_oe_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds1_coreid_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds1_ctrl_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds1_value_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds1_value_p = "", DIR = OUT, VEC = [31:0]
PORT ov32_lvds1_oe_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds2_coreid_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds2_ctrl_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds2_value_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds2_value_p = "", DIR = OUT, VEC = [31:0]
PORT ov32_lvds2_oe_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds3_coreid_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds3_ctrl_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_lvds3_value_p = "", DIR = IN, VEC = [31:0]
PORT ov32_lvds3_value_p = "", DIR = OUT, VEC = [31:0]
PORT ov32_lvds3_oe_p = "", DIR = OUT, VEC = [31:0]
PORT iv32_RTDExSyncCoreId_p = "", DIR = IN, VEC = [31:0], IO_IF = RTDEX_SYNC_REGS_IF
PORT o_RTDExSyncCoreReset_p = "", DIR = OUT, IO_IF = RTDEX_SYNC_REGS_IF
PORT ov8_RtdexSyncAddr_p = "", DIR = OUT, VEC = [7:0]
PORT o_RTDExSyncConfigWrEn_p = "", DIR = OUT, IO_IF = RTDEX_SYNC_REGS_IF
PORT ov32_RtdexSyncWrReg_p = "", DIR = OUT, VEC = [31:0], IO_IF = RTDEX_SYNC_REGS_IF
PORT iv32_RtdexSyncRdReg_p = "", DIR = IN, VEC = [31:0], IO_IF = RTDEX_SYNC_REGS_IF
PORT iv32_Timestamp_CoreIdVers_p = "", DIR = IN, VEC = [31:0]
PORT o_Timestamp_CoreReset_p = "", DIR = OUT
PORT o_Timestamp_SetTime_p = "", DIR = OUT
PORT o_Timestamp_LatchTime_p = "", DIR = OUT
PORT iv64_Timestamp_p = "", DIR = IN, VEC = [63:0]
PORT ov64_Timestamp_p = "", DIR = OUT, VEC = [63:0]

END
